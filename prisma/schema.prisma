generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  INSTRUCTOR
}

model User {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  role     UserRole @default(STUDENT)

  questions Question[]
  answers   Answer[]
  comments  Comment[]
}

model Question {
  id        String    @id @default(uuid())
  title     String
  slug      String    @unique
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  bestAnswerId String? @unique
  bestAnswer   Answer? @relation("bestAnswer", fields: [bestAnswerId], references: [id])

  answers     Answer[]
  comments    Comment[]
  attachments Attachment[]
}

model Answer {
  id        String    @id @default(uuid())
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  questionId   String
  question     Question     @relation(fields: [questionId], references: [id])
  bestAnswerOn Question?    @relation("bestAnswer")
  comments     Comment[]
  attachments  Attachment[]
}

model Comment {
  id        String    @id @default(uuid())
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  questionId String?
  question   Question? @relation(fields: [questionId], references: [id])

  answerId String?
  answer   Answer? @relation(fields: [answerId], references: [id])
}

model Attachment {
  id    String @id @default(uuid())
  title String
  url   String

  questionId String?
  question   Question? @relation(fields: [questionId], references: [id])

  answerId String?
  answer   Answer? @relation(fields: [answerId], references: [id])
}
